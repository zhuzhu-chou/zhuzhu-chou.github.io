(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{208:function(_,v,e){"use strict";e.r(v);var o=e(0),c=Object(o.a)({},(function(){var _=this.$createElement;this._self._c;return this._m(0)}),[function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("div",{staticClass:"content"},[e("p",[_._v("谈到"),e("code",[_._v("HTTPS")]),_._v(", 就不得不谈到与之相对的"),e("code",[_._v("HTTP")]),_._v("。"),e("code",[_._v("HTTP")]),_._v("的特性是明文传输，因此在传输的每一个环节，数据都有可能被第三方窃取或者篡改，具体来说，HTTP 数据经过 TCP 层，然后经过"),e("code",[_._v("WIFI路由器")]),_._v("、"),e("code",[_._v("运营商")]),_._v("和"),e("code",[_._v("目标服务器")]),_._v("，这些环节中都可能被中间人拿到数据并进行篡改，也就是我们常说的"),e("strong",[_._v("中间人攻击")]),_._v("。")]),_._v(" "),e("p",[_._v("为了防范这样一类攻击，我们不得已要引入新的加密方案，即 HTTPS。")]),_._v(" "),e("p",[e("code",[_._v("HTTPS")]),_._v("并不是一个新的协议, 而是一个加强版的"),e("code",[_._v("HTTP")]),_._v("。其原理是在"),e("code",[_._v("HTTP")]),_._v("和"),e("code",[_._v("TCP")]),_._v("之间建立了一个中间层，当"),e("code",[_._v("HTTP")]),_._v("和"),e("code",[_._v("TCP")]),_._v("通信时并不是像以前那样直接通信，直接经过了一个中间层进行加密，将加密后的数据包传给"),e("code",[_._v("TCP")]),_._v(", 响应的，"),e("code",[_._v("TCP")]),_._v("必须将数据包解密，才能传给上面的"),e("code",[_._v("HTTP")]),_._v("。这个中间层也叫"),e("code",[_._v("安全层")]),_._v("。"),e("code",[_._v("安全层")]),_._v("的核心就是对数据"),e("code",[_._v("加解密")]),_._v("。")]),_._v(" "),e("p",[_._v("接下来我们就来剖析一下"),e("code",[_._v("HTTPS")]),_._v("的加解密是如何实现的。")]),_._v(" "),e("h3",{attrs:{id:"对称加密和非对称加密"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对称加密和非对称加密"}},[_._v("#")]),_._v(" 对称加密和非对称加密")]),_._v(" "),e("p",[e("strong",[_._v("概念")])]),_._v(" "),e("p",[_._v("首先需要理解"),e("code",[_._v("对称加密")]),_._v("和"),e("code",[_._v("非对称加密")]),_._v("的概念，然后讨论两者应用后的效果如何。")]),_._v(" "),e("p",[e("code",[_._v("对称加密")]),_._v("是最简单的方式，指的是"),e("code",[_._v("加密")]),_._v("和"),e("code",[_._v("解密")]),_._v("用的是"),e("strong",[_._v("同样的密钥")]),_._v("。")]),_._v(" "),e("p",[_._v("而对于"),e("code",[_._v("非对称加密")]),_._v("，如果有 A、 B 两把密钥，如果用 A 加密过的数据包只能用 B 解密，反之，如果用 B 加密过的数据包只能用 A 解密。")]),_._v(" "),e("p",[e("strong",[_._v("加解密过程")])]),_._v(" "),e("p",[_._v("接着我们来谈谈"),e("code",[_._v("浏览器")]),_._v("和"),e("code",[_._v("服务器")]),_._v("进行协商加解密的过程。")]),_._v(" "),e("p",[_._v("首先，浏览器会给服务器发送一个随机数"),e("code",[_._v("client_random")]),_._v(" 和一个加密的方法列表。")]),_._v(" "),e("p",[_._v("服务器接收后给浏览器返回另一个随机数"),e("code",[_._v("server_random")]),_._v("和加密方法。")]),_._v(" "),e("p",[_._v("现在，两者拥有三样相同的凭证: "),e("code",[_._v("client_random")]),_._v("、"),e("code",[_._v("server_random")]),_._v("和加密方法。")]),_._v(" "),e("p",[_._v("接着用这个加密方法将两个随机数混合起来生成密钥，这个密钥就是浏览器和服务端通信的"),e("code",[_._v("暗号")]),_._v("。")]),_._v(" "),e("p",[e("strong",[_._v("各自应用的效果")])]),_._v(" "),e("p",[_._v("如果用"),e("code",[_._v("对称加密")]),_._v("的方式，那么第三方可以在中间获取到"),e("code",[_._v("client_random")]),_._v("、"),e("code",[_._v("server_random")]),_._v("和加密方法，由于这个加密方法同时可以解密，所以中间人可以成功对暗号进行解密，拿到数据，很容易就将这种加密方式破解了。")]),_._v(" "),e("p",[_._v("那能不能只用"),e("code",[_._v("非对称加密")]),_._v("呢？理论上是可以的，但实际上非对称加密需要的计算量非常大，对于稍微大一点的数据即使用最快的处理器也非常耗时。后面有机会给大家分享一下 RSA 非对称加密算法的原理，大家就会有更加直观的认识，这里我们先不深究。")]),_._v(" "),e("h3",{attrs:{id:"对称加密和非对称加密的结合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对称加密和非对称加密的结合"}},[_._v("#")]),_._v(" 对称加密和非对称加密的结合")]),_._v(" "),e("p",[_._v("可以发现，对称加密和非对称加密，只用前者会有安全隐患，只用后者性能消耗又太大。那我们能不能把两者结合，保证性能的同时又能保证安全呢？")]),_._v(" "),e("p",[_._v("其实是可以的，演示一下整个流程：")]),_._v(" "),e("ol",[e("li",[_._v("浏览器向服务器发送"),e("code",[_._v("client_random")]),_._v("和加密方法列表。")]),_._v(" "),e("li",[_._v("服务器接收到，返回"),e("code",[_._v("server_random")]),_._v("、加密方法以及公钥。")]),_._v(" "),e("li",[_._v("浏览器接收，接着生成另一个随机数"),e("code",[_._v("pre_random")]),_._v(", 并且用公钥加密，传给服务器。(敲黑板！重点操作！)")]),_._v(" "),e("li",[_._v("服务器用公钥解密这个被加密后的"),e("code",[_._v("pre_random")]),_._v("。")])]),_._v(" "),e("p",[_._v("现在浏览器和服务器有三样相同的凭证:"),e("code",[_._v("client_random")]),_._v("、"),e("code",[_._v("server_random")]),_._v("和"),e("code",[_._v("pre_random")]),_._v("。然后两者用相同的加密方法混合这三个随机数，生成最终的"),e("code",[_._v("密钥")]),_._v("。")]),_._v(" "),e("p",[_._v("然后浏览器和服务器尽管用一样的密钥进行通信，即使用"),e("code",[_._v("对称加密")]),_._v("。")]),_._v(" "),e("p",[_._v("这个最终的密钥是很难被中间人拿到的，为什么呢? 因为中间人没有私钥，从而"),e("strong",[_._v("拿不到pre_random")]),_._v("，也就无法生成最终的密钥了。")]),_._v(" "),e("p",[_._v("回头比较一下和单纯的使用"),e("strong",[_._v("非对称加密")]),_._v(", 这种方式做了什么改进呢？本质上是"),e("strong",[_._v("防止了私钥加密的数据外传")]),_._v("。单独使用"),e("strong",[_._v("非对称加密")]),_._v("，最大的漏洞在于服务器传数据给浏览器只能用"),e("code",[_._v("私钥")]),_._v("加密，这是危险产生的根源。利用"),e("code",[_._v("对称和非对称")]),_._v("加密结合的方式，就防止了这一点，从而保证了安全。")]),_._v(" "),e("h3",{attrs:{id:"添加数字证书"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加数字证书"}},[_._v("#")]),_._v(" 添加数字证书")]),_._v(" "),e("p",[_._v("尽管通过两者加密方式的结合，能够很好地实现加密传输，但实际上还是存在一些问题。黑客如果采用 DNS 劫持，将目标地址替换成黑客服务器的地址，然后黑客自己造一份公钥和私钥，照样能进行数据传输。而对于浏览器用户而言，他是不知道自己正在访问一个危险的服务器的。")]),_._v(" "),e("p",[_._v("事实上"),e("code",[_._v("HTTPS")]),_._v("在上述"),e("code",[_._v("结合对称和非对称加密")]),_._v("的基础上，又添加了"),e("code",[_._v("数字证书认证")]),_._v("的步骤。其目的就是让服务")])])}],!1,null,null,null);v.default=c.exports}}]);