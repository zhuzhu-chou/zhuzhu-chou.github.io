(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{177:function(s,a,t){"use strict";t.r(a);var e=t(0),v=Object(e.a)({},(function(){var s=this.$createElement;this._self._c;return this._m(0)}),[function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("div",{staticClass:"content"},[t("h2",{attrs:{id:"base64"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#base64"}},[s._v("#")]),s._v(" Base64")]),s._v(" "),t("blockquote",[t("p",[s._v("网络上传输的字符并不全是可打印的字符，比如二进制文件、图片等。是基于64个可打印的字符来表示二进制数据的一种方法。")])]),s._v(" "),t("p",[s._v("**优点：**可以加密，"),t("strong",[s._v("减少了HTTP请求")])]),s._v(" "),t("p",[s._v("**缺点：**是需要消耗CPU进行编解码")]),s._v(" "),t("h2",{attrs:{id:"编码原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编码原理"}},[s._v("#")]),s._v(" 编码原理")]),s._v(" "),t("blockquote",[t("p",[s._v("**"),t("code",[s._v("Base64编码")]),s._v("**是基于64个字符"),t("code",[s._v("A-Z,a-z，0-9，+，/")]),s._v("的编码方式，因为2的6次方正好为64，所以就用 6bit 就可以表示出64个字符，例如 000000 对应 A，000001 对应 B。")])]),s._v(" "),t("p",[s._v("Base64 的原理比较简单，每当我们使用 Base64 时都会先定义一个类似这样的数组：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("['A', 'B', 'C', ... 'a', 'b', 'c', ... '0', '1', ... '+', '/']\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v('上面就是 Base64 的索引表，字符选用了"A-Z、a-z、0-9、+、/" 64个可打印字符，这是标准的Base64协议规定。在日常使用中我们还会看到“=”或“==”号出现在 Base64 的编码结果中，“=”在此是作为填充字符出现。')]),s._v(" "),t("p",[t("strong",[s._v("具体转码步骤")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("第一步，将待转换的字符串"),t("strong",[s._v("每三个字符（1字符=1字节=8bit）分为一组")]),s._v("，那么共有24个二进制位。")])]),s._v(" "),t("li",[t("p",[s._v("第二步，将上面的24个二进制位每6个一组，共分为4组。")])]),s._v(" "),t("li",[t("p",[s._v("第三步，在每组前面添加两个0，每组由6个变为8个二进制位，总共32个二进制位，即四个字节。")])]),s._v(" "),t("li",[t("p",[s._v("第四步，根据Base64编码对照表（见下图）获得对应的值。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("0-25：A-Z\n26-51: a-z\n52-61: 0-9\n62: +\n63: /\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])])]),s._v(" "),t("p",[s._v("我们可以发现：")]),s._v(" "),t("ul",[t("li",[s._v("Base64编码之后的文本，要比原文大约三分之一。")]),s._v(" "),t("li",[s._v("为什么使用3个字节一组呢？因为6和8的最小公倍数为24，三个字节正好24个二进制位，每6个bit位一组，恰好能够分为4组。")])]),s._v(" "),t("p",[s._v("示例（下面有点错误：a 少了一位）：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://zhuzhu-chou.github.io/images/20190517212249969.jpg",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("每三个为一组，那位数不足的情况呢？")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://zhuzhu-chou.github.io/images/%E4%BD%8D%E6%95%B0%E4%B8%8D%E8%B6%B3%E7%9A%84%E6%83%85%E5%86%B5.png",alt:""}})]),s._v(" "),t("ul",[t("li",[s._v("两个字节：两个字节共16个二进制位，依旧按照规则进行分组。此时总共16个二进制位，每6个一组，则第三组缺少2位，用0补齐，得到三个Base64编码，第四组完全没有数据则用“=”补上。因此，上图中“BC”转换之后为“QKM=”")]),s._v(" "),t("li",[s._v("一个字节：一个字节共8个二进制位，依旧按照规则进行分组。此时共8个二进制位，每6个一组，则第二组缺少4位，用0补齐，得到两个Base64编码，而后面两组没有对应数据，都用“=”补上。因此，上图中“A”转换之后为“QQ==”；")])])])}],!1,null,null,null);a.default=v.exports}}]);