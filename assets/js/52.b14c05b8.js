(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{277:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"什么时候会发生隐式类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么时候会发生隐式类型转换"}},[t._v("#")]),t._v(" 什么时候会发生隐式类型转换")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("数字运算")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('"+": 将表达式的值转换为String（仅当有一个是String类型）\n"-": 将表达式的值转换为Number\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v('"."')]),t._v("：被隐式转换为对象")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v('"if语句"')]),t._v("：判断的条件表达式会被隐式转换为 Boolean 类型")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v('"=="')]),t._v("：JS的非严格匹配时，会进行隐式类型转换")])])]),t._v(" "),a("h2",{attrs:{id:"类型转换具体规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换具体规则"}},[t._v("#")]),t._v(" 类型转换具体规则")]),t._v(" "),a("p",[t._v("JS中，类型转换只有三种：")]),t._v(" "),a("ul",[a("li",[t._v("转换成数字")]),t._v(" "),a("li",[t._v("转换成布尔值")]),t._v(" "),a("li",[t._v("转换成字符串")])]),t._v(" "),a("blockquote",[a("p",[t._v('注意"Boolean 转字符串"这行结果指的是 true 转字符串的例子')]),t._v(" "),a("p",[a("code",[t._v("true.toString() => 'true'")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/home/boygreen/%E5%9B%BE%E7%89%87/type.jpg",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"和-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和-的区别"}},[t._v("#")]),t._v(" == 和 === 的区别")]),t._v(" "),a("p",[t._v("=== 为严格转换，两边不仅指相等，类型也要相等；==  如果两边类型不同会涉及一些类型转换：")]),t._v(" "),a("p",[t._v("转换规则如下：")]),t._v(" "),a("ul",[a("li",[t._v("两边的类型是否相同，相同的话就比较值的大小，例如1==2，返回false")]),t._v(" "),a("li",[t._v("判断的是否是"),a("strong",[t._v("null和undefined，是的话就返回true")])]),t._v(" "),a("li",[t._v("判断的类型是否是String和Number，是的话，"),a("strong",[t._v("把String类型转换成Number")]),t._v("，再进行比较")]),t._v(" "),a("li",[t._v("判断其中一方是否是Boolean，是的话就"),a("strong",[t._v("把Boolean转换成Number")]),t._v("，再进行比较")]),t._v(" "),a("li",[t._v("如果其中一方为Object，且另一方为String、Number或者Symbol，会"),a("strong",[t._v("将Object转换成字符串")]),t._v("，再进行比较")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[object Object]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"结果是什么？为什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结果是什么？为什么？"}},[t._v("#")]),t._v(" [] == ![]结果是什么？为什么？")]),t._v(" "),a("p",[t._v("== 中，左右两边都需要转换为数字然后进行比较。")]),t._v(" "),a("p",[t._v("[]转换为数字为0。")]),t._v(" "),a("p",[t._v("![] 首先是转换为布尔值，由于[]作为一个引用类型转换为布尔值为true, 因此![]为false，进而在转换成数字，变为0。")]),t._v(" "),a("p",[t._v("0 == 0 ， 结果为true")]),t._v(" "),a("h2",{attrs:{id:"如何让-a-1-a-2-的值为true"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何让-a-1-a-2-的值为true"}},[t._v("#")]),t._v(" 如何让 (a == 1 && a == 2) 的值为true")]),t._v(" "),a("p",[a("strong",[t._v("对象转原始类型的运行流程")])]),t._v(" "),a("ul",[a("li",[t._v("如果有 "),a("code",[t._v("Symbol.toPrimitive()")]),t._v(" 方法，优先调用再返回")]),t._v(" "),a("li",[t._v("调用 "),a("code",[t._v("valueOf()")]),t._v("，如果转化为原始类型，则返回")]),t._v(" "),a("li",[t._v("调用 "),a("code",[t._v("toString()")]),t._v("，如果转化为原始类型，则返回")]),t._v(" "),a("li",[t._v("如果都没有返回原始类型，会报错")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toPrimitive"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])])}],!1,null,null,null);s.default=e.exports}}]);